/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EntryPoint, EntryPointInterface } from "../EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeRelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawnAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawnAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052604051620000129062000050565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b506200005e565b6102208062003ed083390190565b608051613e4f62000081600039600081816111790152612cd70152613e4f6000f3fe6080604052600436106101125760003560e01c8063957122ab116100a5578063bb9fe6bf11610074578063d6383f9411610059578063d6383f94146103e6578063ee21942314610406578063fc7e286d1461042657600080fd5b8063bb9fe6bf146103b1578063c23a5cea146103c657600080fd5b8063957122ab1461033e5780639b249f691461035e578063a61935311461037e578063b760faf91461039e57600080fd5b80634b1d7cf5116100e15780634b1d7cf5146101ad5780635287ce12146101cd57806370a08231146102ea5780638f41ec5a1461032957600080fd5b80630396cb60146101275780631d7327561461013a5780631fad948c1461016d578063205c28781461018d57600080fd5b3661012257610120336104db565b005b600080fd5b610120610135366004612f94565b610542565b34801561014657600080fd5b5061015a6101553660046131a9565b610800565b6040519081526020015b60405180910390f35b34801561017957600080fd5b506101206101883660046132b4565b610973565b34801561019957600080fd5b506101206101a836600461330b565b610ab4565b3480156101b957600080fd5b506101206101c83660046132b4565b610c42565b3480156101d957600080fd5b506102926101e8366004613337565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546001600160701b038082168352600160701b820460ff16151594830194909452600160781b90049092169282019290925260019091015463ffffffff81166060830152640100000000900465ffffffffffff16608082015290565b6040805182516001600160701b03908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015165ffffffffffff169181019190915260a001610164565b3480156102f657600080fd5b5061015a610305366004613337565b6001600160a01b03166000908152602081905260409020546001600160701b031690565b34801561033557600080fd5b5061015a600181565b34801561034a57600080fd5b50610120610359366004613354565b611068565b34801561036a57600080fd5b506101206103793660046133d9565b611162565b34801561038a57600080fd5b5061015a610399366004613434565b611231565b6101206103ac366004613337565b6104db565b3480156103bd57600080fd5b50610120611273565b3480156103d257600080fd5b506101206103e1366004613337565b6113c0565b3480156103f257600080fd5b50610120610401366004613469565b611616565b34801561041257600080fd5b50610120610421366004613434565b61172a565b34801561043257600080fd5b50610495610441366004613337565b600060208190529081526040902080546001909101546001600160701b0380831692600160701b810460ff1692600160781b9091049091169063ffffffff811690640100000000900465ffffffffffff1685565b604080516001600160701b0396871681529415156020860152929094169183019190915263ffffffff16606082015265ffffffffffff909116608082015260a001610164565b6104e581346119fe565b6001600160a01b03811660008181526020818152604091829020805492516001600160701b03909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff82166105a95760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff90811690831610156106075760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d650000000060448201526064016105a0565b8054600090610627903490600160781b90046001600160701b03166134e1565b9050600081116106795760405162461bcd60e51b815260206004820152601260248201527f6e6f207374616b6520737065636966696564000000000000000000000000000060448201526064016105a0565b6001600160701b038111156106d05760405162461bcd60e51b815260206004820152600e60248201527f7374616b65206f766572666c6f7700000000000000000000000000000000000060448201526064016105a0565b6040805160a08101825283546001600160701b0390811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a902098518954955194518916600160781b027fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff951515600160701b026effffffffffffffffffffffffffffff199097169190991617949094179290921695909517865551949092018054925165ffffffffffff166401000000000269ffffffffffffffffffff19909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01906107f3908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b6000805a90503330146108555760405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c7900000000000000000060448201526064016105a0565b8451604081015160608201518101611388015a101561087f5763deaddead60e01b60005260206000fd5b87516000901561091357600061089c846000015160008c86611aae565b9050806109115760006108b0610800611ac6565b80519091501561090b5784600001516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201876020015184604051610902929190613551565b60405180910390a35b60019250505b505b600088608001515a86030190506109656000838b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611af2915050565b9a9950505050505050505050565b8160008167ffffffffffffffff81111561098f5761098f612fba565b6040519080825280602002602001820160405280156109c857816020015b6109b5612f0a565b8152602001906001900390816109ad5790505b50905060005b82811015610a415760008282815181106109ea576109ea61356a565b60200260200101519050600080610a25848a8a87818110610a0d57610a0d61356a565b9050602002810190610a1f9190613580565b85611df5565b91509150610a368483836000611f77565b5050506001016109ce565b506000805b83811015610aa157610a9581888884818110610a6457610a6461356a565b9050602002810190610a769190613580565b858481518110610a8857610a8861356a565b6020026020010151612141565b90910190600101610a46565b50610aac8482612277565b505050505050565b33600090815260208190526040902080546001600160701b0316821115610b1d5760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c617267650000000000000060448201526064016105a0565b8054610b339083906001600160701b03166135a1565b81546dffffffffffffffffffffffffffff19166001600160701b0391909116178155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610be6576040519150601f19603f3d011682016040523d82523d6000602084013e610beb565b606091505b5050905080610c3c5760405162461bcd60e51b815260206004820152601260248201527f6661696c656420746f207769746864726177000000000000000000000000000060448201526064016105a0565b50505050565b816000805b82811015610dcf5736868683818110610c6257610c6261356a565b9050602002810190610c7491906135b8565b9050366000610c8383806135ce565b90925090506000610c9a6040850160208601613337565b90506001600160a01b03811660011415610cf65760405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f7200000000000000000060448201526064016105a0565b6001600160a01b03811615610dac576001600160a01b03811663e3563a4f8484610d236040890189613618565b6040518563ffffffff1660e01b8152600401610d4294939291906137c5565b60006040518083038186803b158015610d5a57600080fd5b505afa925050508015610d6b575060015b610dac576040517f86a9f7500000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016105a0565b610db682876134e1565b9550505050508080610dc790613842565b915050610c47565b5060008167ffffffffffffffff811115610deb57610deb612fba565b604051908082528060200260200182016040528015610e2457816020015b610e11612f0a565b815260200190600190039081610e095790505b5090506000805b84811015610f0f5736888883818110610e4657610e4661356a565b9050602002810190610e5891906135b8565b9050366000610e6783806135ce565b90925090506000610e7e6040850160208601613337565b90508160005b81811015610ef6576000898981518110610ea057610ea061356a565b60200260200101519050600080610ec38b898987818110610a0d57610a0d61356a565b91509150610ed384838389611f77565b8a610edd81613842565b9b50505050508080610eee90613842565b915050610e84565b5050505050508080610f0790613842565b915050610e2b565b50600080915060005b858110156110285736898983818110610f3357610f3361356a565b9050602002810190610f4591906135b8565b9050610f576040820160208301613337565b6001600160a01b03167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a2366000610f9983806135ce565b90925090508060005b8181101561101057610fe488858584818110610fc057610fc061356a565b9050602002810190610fd29190613580565b8b8b81518110610a8857610a8861356a565b610fee90886134e1565b965087610ffa81613842565b985050808061100890613842565b915050610fa2565b5050505050808061102090613842565b915050610f18565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a261105e8682612277565b5050505050505050565b8315801561107e57506001600160a01b0383163b155b156110cb5760405162461bcd60e51b815260206004820152601960248201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060448201526064016105a0565b601481106111405760006110e2601482848661385d565b6110eb91613887565b60601c9050803b61113e5760405162461bcd60e51b815260206004820152601b60248201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060448201526064016105a0565b505b60405162461bcd60e51b815260206004820152600060248201526044016105a0565b604051632b870d1b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a36906111b090859085906004016138bc565b6020604051808303816000875af11580156111cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f391906138d0565b6040517f6ca7b8060000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201526024016105a0565b600061123c82612375565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b336000908152602081905260409020600181015463ffffffff166112d95760405162461bcd60e51b815260206004820152600a60248201527f6e6f74207374616b65640000000000000000000000000000000000000000000060448201526064016105a0565b8054600160701b900460ff166113315760405162461bcd60e51b815260206004820152601160248201527f616c726561647920756e7374616b696e6700000000000000000000000000000060448201526064016105a0565b60018101546000906113499063ffffffff16426138ed565b60018301805469ffffffffffff00000000191664010000000065ffffffffffff84169081029190911790915583546eff00000000000000000000000000001916845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602001610536565b3360009081526020819052604090208054600160781b90046001600160701b03168061142e5760405162461bcd60e51b815260206004820152601460248201527f4e6f207374616b6520746f20776974686472617700000000000000000000000060448201526064016105a0565b6001820154640100000000900465ffffffffffff1661148f5760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b65282920666972737400000060448201526064016105a0565b60018201544264010000000090910465ffffffffffff1611156114f45760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f7420647565000000000060448201526064016105a0565b60018201805469ffffffffffffffffffff1916905581547fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff168255604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d80600081146115c0576040519150601f19603f3d011682016040523d82523d6000602084013e6115c5565b606091505b5050905080610c3c5760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b65000000000000000060448201526064016105a0565b61161e612f0a565b6116278561238e565b60008061163660008885611df5565b9150915060006116468383612469565b905061165143600052565b600061165f60008a87612141565b905061166a43600052565b600060606001600160a01b038a16156116e057896001600160a01b03168989604051611697929190613917565b6000604051808303816000865af19150503d80600081146116d4576040519150601f19603f3d011682016040523d82523d6000602084013e6116d9565b606091505b5090925090505b8660800151838560200151866040015185856040517f8b7ac9800000000000000000000000000000000000000000000000000000000081526004016105a096959493929190613927565b611732612f0a565b61173b8261238e565b60008061174a60008585611df5565b845160a00151604080518082018252600080825260208083018281526001600160a01b03958616835282825284832080546001600160701b03600160781b918290048116875260019283015463ffffffff9081169094528d51518851808a018a5287815280870188815291909a168752868652888720805493909304909116895291015490911690528351808501909452818452830152939550919350903660006117f860408a018a613618565b90925090506000601482101561180f57600061182a565b61181d60146000848661385d565b61182691613887565b60601c5b604080518082018252600080825260208083018281526001600160a01b0386168352908290529290208054600160781b90046001600160701b031682526001015463ffffffff16909152909150935050505060006118888686612469565b9050600081600001519050600060016001600160a01b0316826001600160a01b031614905060006040518060c001604052808b6080015181526020018b6040015181526020018315158152602001856020015165ffffffffffff168152602001856040015165ffffffffffff1681526020016119058c6060015190565b905290506001600160a01b0383161580159061192b57506001600160a01b038316600114155b156119c4576040805180820182526001600160a01b0385168082528251808401845260008082526020808301828152938252818152908590208054600160781b90046001600160701b031683526001015463ffffffff169092529082015290517ffaecb4e40000000000000000000000000000000000000000000000000000000081526105a0908390899089908c9086906004016139c9565b808686896040517fe0cff05f0000000000000000000000000000000000000000000000000000000081526004016105a09493929190613a49565b6001600160a01b03821660009081526020819052604081208054909190611a2f9084906001600160701b03166134e1565b90506001600160701b03811115611a885760405162461bcd60e51b815260206004820152601060248201527f6465706f736974206f766572666c6f770000000000000000000000000000000060448201526064016105a0565b81546dffffffffffffffffffffffffffff19166001600160701b03919091161790555050565b6000806000845160208601878987f195945050505050565b60603d82811115611ad45750815b604051602082018101604052818152816000602083013e9392505050565b6000805a855190915060009081611b0882612535565b60a08301519091506001600160a01b038116611b275782519350611cda565b809350600088511115611cda57868202955060028a6002811115611b4d57611b4d613aa0565b14611bbf57606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611b87908e908d908c90600401613ab6565b600060405180830381600088803b158015611ba157600080fd5b5087f1158015611bb5573d6000803e3d6000fd5b5050505050611cda565b606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611bf4908e908d908c90600401613ab6565b600060405180830381600088803b158015611c0e57600080fd5b5087f193505050508015611c20575060015b611cda57611c2c613afd565b806308c379a01415611c865750611c41613b19565b80611c4c5750611c88565b8b81604051602001611c5e9190613ba3565b60408051601f1981840301815290829052631101335b60e11b82526105a09291600401613551565b505b8a604051631101335b60e11b81526004016105a09181526040602082018190526012908201527f4141353020706f73744f70207265766572740000000000000000000000000000606082015260800190565b5a85038701965081870295508589604001511015611d43578a604051631101335b60e11b81526004016105a091815260406020808301829052908201527f414135312070726566756e642062656c6f772061637475616c476173436f7374606082015260800190565b6040890151869003611d5585826119fe565b6000808c6002811115611d6a57611d6a613aa0565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f604051611ddd949392919093845291151560208401526040830152606082015260800190565b60405180910390a45050505050505095945050505050565b60008060005a8451909150611e0a8682612566565b611e1386611231565b6020860152604081015160608201516080830151171760e087013517610100870135176effffffffffffffffffffffffffffff811115611e955760405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f77000000000000000060448201526064016105a0565b600080611ea18461265f565b9050611eaf8a8a8a846126ac565b97509150611ebc43600052565b60a08401516060906001600160a01b031615611ee457611edf8b8b8b858761290c565b975090505b60005a87039050808b60a001351015611f49578b604051631101335b60e11b81526004016105a0918152604060208201819052601e908201527f41413430206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050935093915050565b600080611f8385612b37565b91509150816001600160a01b0316836001600160a01b031614611ff25785604051631101335b60e11b81526004016105a09181526040602082018190526014908201527f41413234207369676e6174757265206572726f72000000000000000000000000606082015260800190565b801561204a5785604051631101335b60e11b81526004016105a09181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b600061205585612b37565b925090506001600160a01b038116156120ba5786604051631101335b60e11b81526004016105a09181526040602082018190526014908201527f41413334207369676e6174757265206572726f72000000000000000000000000606082015260800190565b81156121385786604051631101335b60e11b81526004016105a09181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560608201527f6500000000000000000000000000000000000000000000000000000000000000608082015260a00190565b50505050505050565b6000805a90506000612154846060015190565b905030631d7327566121696060880188613618565b87856040518563ffffffff1660e01b815260040161218a9493929190613be8565b6020604051808303816000875af19250505080156121c5575060408051601f3d908101601f191682019092526121c291810190613c9c565b60015b61226b57600060206000803e5060005163deaddead60e01b8114156122365786604051631101335b60e11b81526004016105a0918152604060208201819052600f908201527f41413935206f7574206f66206761730000000000000000000000000000000000606082015260800190565b600085608001515a61224890866135a1565b61225291906134e1565b9050612262886002888685611af2565b9450505061226e565b92505b50509392505050565b6001600160a01b0382166122cd5760405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e6566696369617279000000000000000060448201526064016105a0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461231a576040519150601f19603f3d011682016040523d82523d6000602084013e61231f565b606091505b50509050806123705760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e65666963696172790060448201526064016105a0565b505050565b600061238082612b87565b805190602001209050919050565b3063957122ab6123a16040840184613618565b6123ae6020860186613337565b6123bc610120870187613618565b6040518663ffffffff1660e01b81526004016123dc959493929190613cb5565b60006040518083038186803b1580156123f457600080fd5b505afa925050508015612405575060015b61246657612411613afd565b806308c379a0141561245a5750612426613b19565b80612431575061245c565b80511561245657600081604051631101335b60e11b81526004016105a0929190613551565b5050565b505b3d6000803e3d6000fd5b50565b604080516060810182526000808252602082018190529181018290529061248f84612bc6565b9050600061249c84612bc6565b82519091506001600160a01b0381166124b3575080515b602080840151604080860151928501519085015191929165ffffffffffff80831690851610156124e1578193505b8065ffffffffffff168365ffffffffffff1611156124fd578092505b5050604080516060810182526001600160a01b03909416845265ffffffffffff92831660208501529116908201529250505092915050565b60c081015160e08201516000919080821415612552575092915050565b61255e82488301612c34565b949350505050565b6125736020830183613337565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e08084013591830191909152610100830135908201523660006125d2610120850185613618565b9092509050801561265257601481101561262e5760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064016105a0565b61263c60146000838561385d565b61264591613887565b60601c60a0840152610c3c565b600060a084015250505050565b60a081015160009081906001600160a01b031661267d576001612680565b60035b60ff16905060008360800151828560600151028560400151010190508360c00151810292505050919050565b60008060005a85518051919250906126d189886126cc60408c018c613618565b612c4c565b60a08201516126df43600052565b60006001600160a01b038216612727576001600160a01b0383166000908152602081905260409020546001600160701b031688811161272057808903612723565b60005b9150505b606084015160208a01516040517f3a871cdd0000000000000000000000000000000000000000000000000000000081526001600160a01b03861692633a871cdd92909161277a918f918790600401613ceb565b60206040518083038160008887f1935050505080156127b6575060408051601f3d908101601f191682019092526127b391810190613c9c565b60015b612848576127c2613afd565b806308c379a014156127f457506127d7613b19565b806127e257506127f6565b8b81604051602001611c5e9190613d10565b505b8a604051631101335b60e11b81526004016105a09181526040602082018190526016908201527f4141323320726576657274656420286f72204f4f472900000000000000000000606082015260800190565b95506001600160a01b0382166128f9576001600160a01b038316600090815260208190526040902080546001600160701b0316808a11156128d5578c604051631101335b60e11b81526004016105a09181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b81546dffffffffffffffffffffffffffff1916908a90036001600160701b03161790555b5a85039650505050505094509492505050565b825160608181015190916000918481116129685760405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e4761730060448201526064016105a0565b60a08201516001600160a01b038116600090815260208190526040902080548784039291906001600160701b0316898110156129f0578c604051631101335b60e11b81526004016105a0918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8981038260000160006101000a8154816001600160701b0302191690836001600160701b03160217905550826001600160a01b031663f465c77e858e8e602001518e6040518563ffffffff1660e01b8152600401612a5093929190613ceb565b60006040518083038160008887f193505050508015612a9157506040513d6000823e601f3d908101601f19168201604052612a8e9190810190613d55565b60015b612b2357612a9d613afd565b806308c379a01415612acf5750612ab2613b19565b80612abd5750612ad1565b8d81604051602001611c5e9190613de1565b505b8c604051631101335b60e11b81526004016105a09181526040602082018190526016908201527f4141333320726576657274656420286f72204f4f472900000000000000000000606082015260800190565b909e909d509b505050505050505050505050565b60008082612b4a57506000928392509050565b6000612b5584612bc6565b9050806040015165ffffffffffff16421180612b7c5750806020015165ffffffffffff1642105b905194909350915050565b6060366000612b9a610140850185613618565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff8116612bff575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000818310612c435781612c45565b825b9392505050565b8015610c3c578251516001600160a01b0381163b15612cb75784604051631101335b60e11b81526004016105a0918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b835160600151604051632b870d1b60e11b81526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163570e1a369190612d0f90889088906004016138bc565b60206040518083038160008887f1158015612d2e573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612d5391906138d0565b90506001600160a01b038116612db55785604051631101335b60e11b81526004016105a0918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b816001600160a01b0316816001600160a01b031614612e1f5785604051631101335b60e11b81526004016105a091815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b6001600160a01b0381163b612e7f5785604051631101335b60e11b81526004016105a091815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b6000612e8e601482868861385d565b612e9791613887565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a00151604051612ef99291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b6040518060a00160405280612f6f60405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b600060208284031215612fa657600080fd5b813563ffffffff81168114612c4557600080fd5b634e487b7160e01b600052604160045260246000fd5b60a0810181811067ffffffffffffffff82111715612ff057612ff0612fba565b60405250565b610100810181811067ffffffffffffffff82111715612ff057612ff0612fba565b601f8201601f1916810167ffffffffffffffff8111828210171561303d5761303d612fba565b6040525050565b600067ffffffffffffffff82111561305e5761305e612fba565b50601f01601f191660200190565b6001600160a01b038116811461246657600080fd5b803561308c8161306c565b919050565b60008183036101808112156130a557600080fd5b6040516130b181612fd0565b809250610100808312156130c457600080fd5b60405192506130d283612ff6565b6130db85613081565b83526020850135602084015260408501356040840152606085013560608401526080850135608084015261311160a08601613081565b60a084015260c085013560c084015260e085013560e084015282825280850135602083015250610120840135604082015261014084013560608201526101608401356080820152505092915050565b60008083601f84011261317257600080fd5b50813567ffffffffffffffff81111561318a57600080fd5b6020830191508360208285010111156131a257600080fd5b9250929050565b6000806000806101c085870312156131c057600080fd5b843567ffffffffffffffff808211156131d857600080fd5b818701915087601f8301126131ec57600080fd5b81356131f781613044565b6040516132048282613017565b8281528a602084870101111561321957600080fd5b8260208601602083013760006020848301015280985050505061323f8860208901613091565b94506101a087013591508082111561325657600080fd5b5061326387828801613160565b95989497509550505050565b60008083601f84011261328157600080fd5b50813567ffffffffffffffff81111561329957600080fd5b6020830191508360208260051b85010111156131a257600080fd5b6000806000604084860312156132c957600080fd5b833567ffffffffffffffff8111156132e057600080fd5b6132ec8682870161326f565b90945092505060208401356133008161306c565b809150509250925092565b6000806040838503121561331e57600080fd5b82356133298161306c565b946020939093013593505050565b60006020828403121561334957600080fd5b8135612c458161306c565b60008060008060006060868803121561336c57600080fd5b853567ffffffffffffffff8082111561338457600080fd5b61339089838a01613160565b9097509550602088013591506133a58261306c565b909350604087013590808211156133bb57600080fd5b506133c888828901613160565b969995985093965092949392505050565b600080602083850312156133ec57600080fd5b823567ffffffffffffffff81111561340357600080fd5b61340f85828601613160565b90969095509350505050565b6000610160828403121561342e57600080fd5b50919050565b60006020828403121561344657600080fd5b813567ffffffffffffffff81111561345d57600080fd5b61255e8482850161341b565b6000806000806060858703121561347f57600080fd5b843567ffffffffffffffff8082111561349757600080fd5b6134a38883890161341b565b9550602087013591506134b58261306c565b9093506040860135908082111561325657600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156134f4576134f46134cb565b500190565b60005b838110156135145781810151838201526020016134fc565b83811115610c3c5750506000910152565b6000815180845261353d8160208601602086016134f9565b601f01601f19169290920160200192915050565b82815260406020820152600061255e6040830184613525565b634e487b7160e01b600052603260045260246000fd5b6000823561015e1983360301811261359757600080fd5b9190910192915050565b6000828210156135b3576135b36134cb565b500390565b60008235605e1983360301811261359757600080fd5b6000808335601e198436030181126135e557600080fd5b83018035915067ffffffffffffffff82111561360057600080fd5b6020019150600581901b36038213156131a257600080fd5b6000808335601e1984360301811261362f57600080fd5b83018035915067ffffffffffffffff82111561364a57600080fd5b6020019150368190038213156131a257600080fd5b6000808335601e1984360301811261367657600080fd5b830160208101925035905067ffffffffffffffff81111561369657600080fd5b8036038313156131a257600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101606136ed846136e085613081565b6001600160a01b03169052565b60208301356020850152613704604084018461365f565b82604087015261371783870182846136a5565b92505050613728606084018461365f565b858303606087015261373b8382846136a5565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e08501526101008084013581860152506101206137828185018561365f565b868403838801526137948482846136a5565b93505050506101406137a88185018561365f565b868403838801526137ba8482846136a5565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b8981101561382b57868503605f190184528235368c900361015e19018112613809578283fd5b613815868d83016136ce565b95505060209384019392909201916001016137e3565b5050505082810360208401526137ba8185876136a5565b6000600019821415613856576138566134cb565b5060010190565b6000808585111561386d57600080fd5b8386111561387a57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156138b45780818660140360031b1b83161692505b505092915050565b60208152600061255e6020830184866136a5565b6000602082840312156138e257600080fd5b8151612c458161306c565b600065ffffffffffff80831681851680830382111561390e5761390e6134cb565b01949350505050565b8183823760009101908152919050565b868152856020820152600065ffffffffffff8087166040840152808616606084015250831515608083015260c060a083015261396660c0830184613525565b98975050505050505050565b80518252602081015160208301526040810151151560408301526000606082015165ffffffffffff8082166060860152806080850151166080860152505060a082015160c060a085015261255e60c0850182613525565b60006101408083526139dd81840189613972565b9150506139f7602083018780518252602090810151910152565b845160608301526020948501516080830152835160a08301529284015160c082015281516001600160a01b031660e0820152908301518051610100830152909201516101209092019190915292915050565b60e081526000613a5c60e0830187613972565b9050613a75602083018680518252602090810151910152565b8351606083015260208401516080830152825160a0830152602083015160c083015295945050505050565b634e487b7160e01b600052602160045260246000fd5b600060038510613ad657634e487b7160e01b600052602160045260246000fd5b84825260606020830152613aed6060830185613525565b9050826040830152949350505050565b600060033d1115613b165760046000803e5060005160e01c5b90565b600060443d1015613b275790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715613b5757505050505090565b8285019150815181811115613b6f5750505050505090565b843d8701016020828501011115613b895750505050505090565b613b9860208286010187613017565b509095945050505050565b7f4141353020706f73744f702072657665727465643a2000000000000000000000815260008251613bdb8160168501602087016134f9565b9190910160160192915050565b60006101c0808352613bfd81840187896136a5565b905084516001600160a01b03808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a08401526137ba8185613525565b600060208284031215613cae57600080fd5b5051919050565b606081526000613cc96060830187896136a5565b6001600160a01b038616602084015282810360408401526139668185876136a5565b606081526000613cfe60608301866136ce565b60208301949094525060400152919050565b7f414132332072657665727465643a200000000000000000000000000000000000815260008251613d4881600f8501602087016134f9565b91909101600f0192915050565b60008060408385031215613d6857600080fd5b825167ffffffffffffffff811115613d7f57600080fd5b8301601f81018513613d9057600080fd5b8051613d9b81613044565b604051613da88282613017565b828152876020848601011115613dbd57600080fd5b613dce8360208301602087016134f9565b6020969096015195979596505050505050565b7f414133332072657665727465643a200000000000000000000000000000000000815260008251613d4881600f8501602087016134f956fea2646970667358221220f1087ebcbbfdc37203ffdfece5d5e7ec512aca901c60597438b60aa0cbd01bb664736f6c634300080c0033608060405234801561001057600080fd5b50610200806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100f9565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60008061007c601482858761016b565b61008591610195565b60601c90506000610099846014818861016b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100f057600093505b50505092915050565b6000806020838503121561010c57600080fd5b823567ffffffffffffffff8082111561012457600080fd5b818501915085601f83011261013857600080fd5b81358181111561014757600080fd5b86602082850101111561015957600080fd5b60209290920196919550909350505050565b6000808585111561017b57600080fd5b8386111561018857600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101c25780818660140360031b1b83161692505b50509291505056fea264697066735822122068794f695c6f7b7c6a7aeddb9caca9a33ac72eeb1aafd109496ddbe65367f1db64736f6c634300080c0033";

export class EntryPoint__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
