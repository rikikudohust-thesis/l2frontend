/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Account, AccountInterface } from "../Account";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "GuardianInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardianExecutor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardianManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guardianManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_guardianExecutor",
        type: "address",
      },
    ],
    name: "setUpGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052306080523480156200001557600080fd5b506040516200209538038062002095833981016040819052620000389162000118565b6001600160a01b03811660a0526200004f62000056565b506200014a565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000116576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012b57600080fd5b81516001600160a01b03811681146200014357600080fd5b9392505050565b60805160a051611edf620001b6600039600081816102b40152818161063f015281816106d901528181610afc01528181610dbe015281816110bd01526114c70152600081816104880152818161050d015281816107840152818161080901526108f30152611edf6000f3fe6080604052600436106101125760003560e01c80638f57d2c5116100a5578063b0d691fe11610074578063c399ec8811610059578063c399ec88146102f8578063c4d66de81461030d578063e935d06f1461032d57600080fd5b8063b0d691fe146102a5578063b61d27f6146102d857600080fd5b80638f57d2c514610222578063a6f9dae114610242578063affed0e014610262578063b03496311461028557600080fd5b80634d44560d116100e15780634d44560d1461019b5780634f1ef286146101bb57806352d1902d146101ce5780638da5cb5b146101e357600080fd5b806318dfb3c71461011e5780633659cfe6146101405780633a871cdd146101605780634a58db191461019357600080fd5b3661011957005b600080fd5b34801561012a57600080fd5b5061013e610139366004611a64565b61034d565b005b34801561014c57600080fd5b5061013e61015b366004611ae5565b61047d565b34801561016c57600080fd5b5061018061017b366004611b02565b6105f9565b6040519081526020015b60405180910390f35b61013e61063d565b3480156101a757600080fd5b5061013e6101b6366004611b56565b6106cf565b61013e6101c9366004611b98565b610779565b3480156101da57600080fd5b506101806108e6565b3480156101ef57600080fd5b5060015461020a90600160601b90046001600160a01b031681565b6040516001600160a01b03909116815260200161018a565b34801561022e57600080fd5b5060035461020a906001600160a01b031681565b34801561024e57600080fd5b5061013e61025d366004611ae5565b6109ab565b34801561026e57600080fd5b506001546bffffffffffffffffffffffff16610180565b34801561029157600080fd5b5060025461020a906001600160a01b031681565b3480156102b157600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061020a565b3480156102e457600080fd5b5061013e6102f3366004611c5c565b610aa9565b34801561030457600080fd5b50610180610af8565b34801561031957600080fd5b5061013e610328366004611ae5565b610ba3565b34801561033957600080fd5b5061013e610348366004611ce5565b610cc4565b610355610db3565b8281146103cf5760405162461bcd60e51b815260206004820152602b60248201527f4163636f756e743a3a206578656375746542617463683a2077726f6e6720617260448201527f726179206c656e6774687300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60005b83811015610476576104648585838181106103ef576103ef611d1e565b90506020020160208101906104049190611ae5565b600085858581811061041857610418611d1e565b905060200281019061042a9190611d34565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e9592505050565b8061046e81611d91565b9150506103d2565b5050505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561050b5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016103c6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105667f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146105d15760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016103c6565b6105da81610f05565b604080516000808252602082019092526105f691839190610f0d565b50565b60006106036110b2565b61060d848461112a565b905061061c6040850185611d34565b1515905061062d5761062d84611206565b610636826112db565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b1580156106bb57600080fd5b505af1158015610476573d6000803e3d6000fd5b6106d7611328565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c28780000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561075d57600080fd5b505af1158015610771573d6000803e3d6000fd5b505050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156108075760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016103c6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108627f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146108cd5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016103c6565b6108d682610f05565b6108e282826001610f0d565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109865760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103c6565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6109b3611393565b6001546001600160a01b03828116600160601b90920416148015906109e057506001600160a01b03811615155b610a525760405162461bcd60e51b815260206004820152602760248201527f4163636f756e743a3a206368616e67654f776e65723a20696e76616c6964206e60448201527f65774f776e65720000000000000000000000000000000000000000000000000060648201526084016103c6565b600180546bffffffffffffffffffffffff16600160601b6001600160a01b038416908102919091179091556040517fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf3690600090a250565b610ab1610db3565b610af2848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e9592505050565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e9190611dac565b905090565b600054610100900460ff1615808015610bc35750600054600160ff909116105b80610bdd5750303b158015610bdd575060005460ff166001145b610c4f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103c6565b6000805460ff191660011790558015610c72576000805461ff0019166101001790555b610c7b82611491565b80156108e2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b610ccc611328565b6002546001600160a01b031615610d4b5760405162461bcd60e51b815260206004820152603760248201527f4163636f756e743a3a207365747570477561726469616e3a206775617264696160448201527f6e4d616e6167657220686173206265656e20736574757000000000000000000060648201526084016103c6565b600280546001600160a01b0380851673ffffffffffffffffffffffffffffffffffffffff19928316811790935560038054918516919092161790556040517fac257f30182a9cea3088894d17d3695364deaa0a839851df24a0100dbb561b4490600090a25050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610dfb5750600154600160601b90046001600160a01b031633145b610e935760405162461bcd60e51b815260206004820152604160248201527f4163636f756e743a3a205f7265717569726546726f6d456e747279506f696e7460448201527f4f724f776e6572203a206e6f74204f776e6572206f7220456e747279506f696e60648201527f7400000000000000000000000000000000000000000000000000000000000000608482015260a4016103c6565b565b600080846001600160a01b03168484604051610eb19190611df1565b60006040518083038185875af1925050503d8060008114610eee576040519150601f19603f3d011682016040523d82523d6000602084013e610ef3565b606091505b50915091508161047657805160208201fd5b6105f6611328565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f4557610f4083611513565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f9f575060408051601f3d908101601f19168201909252610f9c91810190611dac565b60015b6110115760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016103c6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146110a65760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016103c6565b50610f408383836115de565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e935760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016103c6565b600080611184836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506111d4611197610140860186611d34565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506116039050565b600154600160601b90046001600160a01b039081169116146111fa576001915050611200565b60009150505b92915050565b600180546020830135916bffffffffffffffffffffffff90911690600061122c83611e0d565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff16146105f65760405162461bcd60e51b815260206004820152603160248201527f4163636f756e743a3a205f76616c6964617465416e645570646174654e6f6e6360448201527f65203a20696e76616c6964206e6f6e636500000000000000000000000000000060648201526084016103c6565b80156105f657604051600090339060001990849084818181858888f193505050503d8060008114610476576040519150601f19603f3d011682016040523d82523d6000602084013e610476565b600154600160601b90046001600160a01b031633148061134757503330145b610e935760405162461bcd60e51b815260206004820181905260248201527f4163636f756e743a3a205f6f6e6c794f776e65723a206f6e6c79206f776e657260448201526064016103c6565b6002546001600160a01b03166114115760405162461bcd60e51b815260206004820152603560248201527f4163636f756e743a3a5f6f6e6c79477561726469616e4d616e616765723a206760448201527f7561726469616e206e6f7420736574757020796574000000000000000000000060648201526084016103c6565b6002546001600160a01b03163314610e935760405162461bcd60e51b815260206004820152603560248201527f4163636f756e743a3a205f6f6e6c79477561726469616e4d616e616765723a2060448201527f6f6e6c7920677561726469616e206d616e61676572000000000000000000000060648201526084016103c6565b600180546bffffffffffffffffffffffff16600160601b6001600160a01b038481168202929092179283905560405192048116917f0000000000000000000000000000000000000000000000000000000000000000909116907f526ffefac8167421b9048ae3377810715d834479565b0182ea4155f0efa4c38090600090a350565b6001600160a01b0381163b6115905760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016103c6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6115e783611627565b6000825111806115f45750805b15610f4057610af28383611667565b6000806000611612858561168c565b9150915061161f816116d2565b509392505050565b61163081611513565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606106368383604051806060016040528060278152602001611e836027913961183b565b6000808251604114156116c35760208301516040840151606085015160001a6116b7878285856118b3565b945094505050506116cb565b506000905060025b9250929050565b60008160048111156116e6576116e6611e39565b14156116ef5750565b600181600481111561170357611703611e39565b14156117515760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103c6565b600281600481111561176557611765611e39565b14156117b35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103c6565b60038160048111156117c7576117c7611e39565b14156105f65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016103c6565b6060600080856001600160a01b0316856040516118589190611df1565b600060405180830381855af49150503d8060008114611893576040519150601f19603f3d011682016040523d82523d6000602084013e611898565b606091505b50915091506118a986838387611977565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118ea575060009050600361196e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561193e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119675760006001925092505061196e565b9150600090505b94509492505050565b606083156119e35782516119dc576001600160a01b0385163b6119dc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c6565b50816119ed565b6119ed83836119f5565b949350505050565b815115611a055781518083602001fd5b8060405162461bcd60e51b81526004016103c69190611e4f565b60008083601f840112611a3157600080fd5b50813567ffffffffffffffff811115611a4957600080fd5b6020830191508360208260051b85010111156116cb57600080fd5b60008060008060408587031215611a7a57600080fd5b843567ffffffffffffffff80821115611a9257600080fd5b611a9e88838901611a1f565b90965094506020870135915080821115611ab757600080fd5b50611ac487828801611a1f565b95989497509550505050565b6001600160a01b03811681146105f657600080fd5b600060208284031215611af757600080fd5b813561063681611ad0565b600080600060608486031215611b1757600080fd5b833567ffffffffffffffff811115611b2e57600080fd5b84016101608187031215611b4157600080fd5b95602085013595506040909401359392505050565b60008060408385031215611b6957600080fd5b8235611b7481611ad0565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611bab57600080fd5b8235611bb681611ad0565b9150602083013567ffffffffffffffff80821115611bd357600080fd5b818501915085601f830112611be757600080fd5b813581811115611bf957611bf9611b82565b604051601f8201601f19908116603f01168101908382118183101715611c2157611c21611b82565b81604052828152886020848701011115611c3a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060608587031215611c7257600080fd5b8435611c7d81611ad0565b935060208501359250604085013567ffffffffffffffff80821115611ca157600080fd5b818701915087601f830112611cb557600080fd5b813581811115611cc457600080fd5b886020828501011115611cd657600080fd5b95989497505060200194505050565b60008060408385031215611cf857600080fd5b8235611d0381611ad0565b91506020830135611d1381611ad0565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611d4b57600080fd5b83018035915067ffffffffffffffff821115611d6657600080fd5b6020019150368190038213156116cb57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611da557611da5611d7b565b5060010190565b600060208284031215611dbe57600080fd5b5051919050565b60005b83811015611de0578181015183820152602001611dc8565b83811115610af25750506000910152565b60008251611e03818460208701611dc5565b9190910192915050565b60006bffffffffffffffffffffffff80831681811415611e2f57611e2f611d7b565b6001019392505050565b634e487b7160e01b600052602160045260246000fd5b6020815260008251806020840152611e6e816040850160208701611dc5565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202d74fb48b430b8931b5c84d95f21b51a880c7f19ea45f491068e59e009ae041e64736f6c634300080c0033";

export class Account__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    anEntryPoint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Account> {
    return super.deploy(anEntryPoint, overrides || {}) as Promise<Account>;
  }
  getDeployTransaction(
    anEntryPoint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  attach(address: string): Account {
    return super.attach(address) as Account;
  }
  connect(signer: Signer): Account__factory {
    return super.connect(signer) as Account__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountInterface {
    return new utils.Interface(_abi) as AccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Account {
    return new Contract(address, _abi, signerOrProvider) as Account;
  }
}
